apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: monitoring
  labels:
    k8s-app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output-graylog.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   Off
        Refresh_Interval  10

  filter-kubernetes.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Labels              On
        Annotations         Off

    # Parser JSON pour toutes les applications
    [FILTER]
        Name                parser
        Match               kube.*
        Key_Name            log
        Parser              json-log
        Reserve_Data        On
        Preserve_Key        On

    # Convertir les niveaux de log texte en numériques pour GELF
    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level debug
        Set                 level 7

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level info
        Set                 level 6

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level notice
        Set                 level 5

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level warning
        Set                 level 4

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level warn
        Set                 level 4

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level error
        Set                 level 3

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level critical
        Set                 level 2

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level alert
        Set                 level 1

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Value_Equals level emergency
        Set                 level 0

    # Créer un champ short_message pour GELF
    # Priorité : message > msg > log
    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Exists message
        Copy                message short_message

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Exists msg
        Condition           Key_Does_Not_Exist short_message
        Copy                msg short_message

    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Does_Not_Exist short_message
        Copy                log short_message

    # Renommage des champs MongoDB
    [FILTER]
        Name                modify
        Match               kube.*
        Condition           Key_Exists s
        Rename              s severity
        Rename              c component

    [FILTER]
        Name                nest
        Match               *
        Operation           lift
        Nested_under        kubernetes
        Add_prefix          kubernetes_

    [FILTER]
        Name                modify
        Match               kube.*
        Copy                kubernetes_container_name source
        Add                 host ${HOSTNAME}

  output-graylog.conf: |
    [OUTPUT]
        Name                   gelf
        Match                  *
        Host                   192.168.86.5
        Port                   12201
        Mode                   tcp
        Gelf_Short_Message_Key short_message
        Host_Key               host
        Level_Key              level

  parsers.conf: |
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   Off

    [PARSER]
        Name        json-log
        Format      json
        Time_Keep   On